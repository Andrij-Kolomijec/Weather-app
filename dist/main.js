(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),i=t.n(r),A=t(645),o=t.n(A),a=t(667),c=t.n(a),s=new URL(t(88),t.b),l=o()(i()),u=c()(s);l.push([n.id,`* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  height: 99vh;\n  background: url(${u});\n  font-family: 'Times New Roman', Times, serif;\n}\n\nheader {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  min-height: 10vh;\n}\n\n#switch-container {\n  position: absolute;\n  top: 3.5vh;\n  left: 2vw;\n  display: flex;\n  gap: 10px;\n}\n\n.switch {\n  border-radius: 10px;\n  height: 30px;\n  width: 100px;\n  font-size: 1rem;\n  color: grey;\n  background: transparent;\n}\n\n.active {\n  font-weight: bold;\n  color: antiquewhite;\n}\n\n#search-form {\n  display: flex;\n  gap: 100px;\n}\n\ninput {\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid;\n  border-radius: 20px;\n  text-align: center;\n  font-size: 2rem;\n}\n\ninput:focus {\n  outline: none;\n}\n\n#search-button {\n  border-radius: 20px;\n  height: 50px;\n  width: 100px;\n  font-size: 1.5rem;\n  color: grey;\n  background: transparent;\n}\n\n#content {\n  flex: 1;\n  display: grid;\n  grid-template: repeat(6, 100px) / repeat(6, minmax(0, 300px));\n  grid-auto-rows: minmax(50px, 100px);\n  color: antiquewhite;\n  font-size: 2rem;\n  place-content: center;\n}\n\n.location,\n.current {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.current {\n  font-size: 1.5rem;\n  gap: 5px;\n  place-items: center;\n}\n\n#country {\n  place-self: end;\n  grid-area: 1 / 1 / 2 / 2;\n}\n\n#city {\n  justify-self: center;\n  font-size: 3rem;\n  font-style: italic;\n  grid-area: 1 / 2 / 2 / 3;\n}\n\n#localtime {\n  justify-self: start;\n  align-self: end;\n  grid-area: 1 / 3 / 2 / 4;\n}\n\n#current-condition {\n  justify-self: center;\n  grid-area: 2 / 3 / 3 / 5;\n}\n\n#current-temp {\n  grid-area: 2 / 1 / 3 / 2;\n  place-self: end;\n}\n\n#current-feelslike {\n  grid-area: 3 / 2 / 4 / 3;\n  place-self: start;\n  left: -50px;\n}\n\n#current-wind {\n  grid-area: 2 / -3 / 3 / -1;\n  place-self: center;\n}\n\n#current-pressure {\n  grid-area: 3 / -3 / 4 / -2;\n  place-self: end;\n}\n\n#current-humidity {\n  grid-area: 5 / 1 / 6 / 3;\n  align-self: start;\n  justify-self: center;\n}\n\n#current-precip {\n  grid-area: 4 / 1 / 5 / 2;\n  align-self: start;\n  justify-self: center;\n}\n\n#current-vis {\n  grid-area: 3 / -2 / 4 / -1;\n  align-self: start;\n}\n\n#current-uv {\n  grid-area: 4 / -3 / 5 / -2;\n}\n\n#content > .current > div{\n  font-size: 2.5rem;\n}\n\nheader > img {\n  border-radius: 100% 0 0 0;\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.7);\n  width: 13vw;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  z-index: -1;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.icon {\n  height: 35px;\n  cursor: pointer;\n}\n\n@media screen and (max-width: 900px) {\n  #search-form {\n    margin-top: 50px;\n    flex-direction: column;\n    gap: 5px;\n    align-items: center;\n  }\n  #search-button,\n  input {\n    font-size: 1rem;\n    height: 5vh;\n  }\n  #switch-container {\n    position: static;\n    display: flex;\n    flex-direction: column;\n  }\n  #search-button {\n    margin-bottom: 50px;\n  }\n  #content {\n    display: flex;\n    flex-direction: column;\n    gap: 5vh;\n    align-items: center;\n    justify-items: center;\n  }\n  #content div {\n    align-self: center;\n  }\n  footer {\n    display: flex;\n    flex-direction: column;\n  }\n  header > img {\n    display: none;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,mDAAmC;EACnC,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,aAAa;EACb,SAAS;AACX;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,UAAU;AACZ;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,wBAAwB;EACxB,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,iBAAiB;EACjB,WAAW;EACX,uBAAuB;AACzB;;AAEA;EACE,OAAO;EACP,aAAa;EACb,6DAA6D;EAC7D,mCAAmC;EACnC,mBAAmB;EACnB,eAAe;EACf,qBAAqB;AACvB;;AAEA;;EAEE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,QAAQ;EACR,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,wBAAwB;AAC1B;;AAEA;EACE,oBAAoB;EACpB,eAAe;EACf,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,wBAAwB;AAC1B;;AAEA;EACE,oBAAoB;EACpB,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;AACpB;;AAEA;EACE,0BAA0B;EAC1B,eAAe;AACjB;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,0BAA0B;EAC1B,iBAAiB;AACnB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;EACzB,0CAA0C;EAC1C,WAAW;EACX,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE;IACE,gBAAgB;IAChB,sBAAsB;IACtB,QAAQ;IACR,mBAAmB;EACrB;EACA;;IAEE,eAAe;IACf,WAAW;EACb;EACA;IACE,gBAAgB;IAChB,aAAa;IACb,sBAAsB;EACxB;EACA;IACE,mBAAmB;EACrB;EACA;IACE,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,mBAAmB;IACnB,qBAAqB;EACvB;EACA;IACE,kBAAkB;EACpB;EACA;IACE,aAAa;IACb,sBAAsB;EACxB;EACA;IACE,aAAa;EACf;AACF",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  height: 99vh;\n  background: url(\"./background.jpg\");\n  font-family: 'Times New Roman', Times, serif;\n}\n\nheader {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  min-height: 10vh;\n}\n\n#switch-container {\n  position: absolute;\n  top: 3.5vh;\n  left: 2vw;\n  display: flex;\n  gap: 10px;\n}\n\n.switch {\n  border-radius: 10px;\n  height: 30px;\n  width: 100px;\n  font-size: 1rem;\n  color: grey;\n  background: transparent;\n}\n\n.active {\n  font-weight: bold;\n  color: antiquewhite;\n}\n\n#search-form {\n  display: flex;\n  gap: 100px;\n}\n\ninput {\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid;\n  border-radius: 20px;\n  text-align: center;\n  font-size: 2rem;\n}\n\ninput:focus {\n  outline: none;\n}\n\n#search-button {\n  border-radius: 20px;\n  height: 50px;\n  width: 100px;\n  font-size: 1.5rem;\n  color: grey;\n  background: transparent;\n}\n\n#content {\n  flex: 1;\n  display: grid;\n  grid-template: repeat(6, 100px) / repeat(6, minmax(0, 300px));\n  grid-auto-rows: minmax(50px, 100px);\n  color: antiquewhite;\n  font-size: 2rem;\n  place-content: center;\n}\n\n.location,\n.current {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.current {\n  font-size: 1.5rem;\n  gap: 5px;\n  place-items: center;\n}\n\n#country {\n  place-self: end;\n  grid-area: 1 / 1 / 2 / 2;\n}\n\n#city {\n  justify-self: center;\n  font-size: 3rem;\n  font-style: italic;\n  grid-area: 1 / 2 / 2 / 3;\n}\n\n#localtime {\n  justify-self: start;\n  align-self: end;\n  grid-area: 1 / 3 / 2 / 4;\n}\n\n#current-condition {\n  justify-self: center;\n  grid-area: 2 / 3 / 3 / 5;\n}\n\n#current-temp {\n  grid-area: 2 / 1 / 3 / 2;\n  place-self: end;\n}\n\n#current-feelslike {\n  grid-area: 3 / 2 / 4 / 3;\n  place-self: start;\n  left: -50px;\n}\n\n#current-wind {\n  grid-area: 2 / -3 / 3 / -1;\n  place-self: center;\n}\n\n#current-pressure {\n  grid-area: 3 / -3 / 4 / -2;\n  place-self: end;\n}\n\n#current-humidity {\n  grid-area: 5 / 1 / 6 / 3;\n  align-self: start;\n  justify-self: center;\n}\n\n#current-precip {\n  grid-area: 4 / 1 / 5 / 2;\n  align-self: start;\n  justify-self: center;\n}\n\n#current-vis {\n  grid-area: 3 / -2 / 4 / -1;\n  align-self: start;\n}\n\n#current-uv {\n  grid-area: 4 / -3 / 5 / -2;\n}\n\n#content > .current > div{\n  font-size: 2.5rem;\n}\n\nheader > img {\n  border-radius: 100% 0 0 0;\n  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.7);\n  width: 13vw;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  z-index: -1;\n}\n\nfooter {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n}\n\n.icon {\n  height: 35px;\n  cursor: pointer;\n}\n\n@media screen and (max-width: 900px) {\n  #search-form {\n    margin-top: 50px;\n    flex-direction: column;\n    gap: 5px;\n    align-items: center;\n  }\n  #search-button,\n  input {\n    font-size: 1rem;\n    height: 5vh;\n  }\n  #switch-container {\n    position: static;\n    display: flex;\n    flex-direction: column;\n  }\n  #search-button {\n    margin-bottom: 50px;\n  }\n  #content {\n    display: flex;\n    flex-direction: column;\n    gap: 5vh;\n    align-items: center;\n    justify-items: center;\n  }\n  #content div {\n    align-self: center;\n  }\n  footer {\n    display: flex;\n    flex-direction: column;\n  }\n  header > img {\n    display: none;\n  }\n}\n"],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,A){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&o[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(i," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},o=[],a=0;a<n.length;a++){var c=n[a],s=r.base?c[0]+r.base:c[0],l=A[s]||0,u="".concat(s," ").concat(l);A[s]=l+1;var p=t(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var f=i(d,r);r.byIndex=a,e.splice(a,0,{identifier:u,updater:f,references:1})}o.push(u)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var A=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<A.length;o++){var a=t(A[o]);e[a].references--}for(var c=r(n,i),s=0;s<A.length;s++){var l=t(A[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},88:(n,e,t)=>{n.exports=t.p+"c679a2865b37d8e1ed67.jpg"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var A=e[r]={id:r,exports:{}};return n[r](A,A.exports,t),A.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!n;)n=r[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),A=t(569),o=t.n(A),a=t(565),c=t.n(a),s=t(216),l=t.n(s),u=t(589),p=t.n(u),d=t(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=o().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),e()(d.Z,f),d.Z&&d.Z.locals&&d.Z.locals,t(88);const m=t.p+"550985caaa8859d4b95f.svg",E=t.p+"10779921f6e638b1b197.svg",B=document.querySelector("#search-button"),C=document.querySelector(".to-metric"),g=document.querySelector(".to-imperial"),h=document.querySelector(".icon"),x=document.querySelector("link[rel='icon']");let y="c",v="kph",b="mm",w="km";async function S(n="Barcelona"){const e=document.querySelector("#country"),t=document.querySelector("#localtime"),r=document.querySelector("#city"),i=document.querySelector("#condition"),A=document.querySelector("#temp"),o=document.querySelector("#feelslike"),a=document.querySelector("#wind"),c=document.querySelector("#pressure"),s=document.querySelector("#humidity"),l=document.querySelector("#precip"),u=document.querySelector("#vis"),p=document.querySelector("#uv");try{const d=await fetch(`https://api.weatherapi.com/v1/current.json?key=750de696050f49b8abb83741230311&q=${n}`,{mode:"cors"}),f=await d.json();200!==d.status?console.log("Server weather error!",f):(e.innerText=f.location.country,r.innerText=f.location.name,t.innerText=f.location.localtime.slice(11),i.innerText=f.current.condition.text,A.innerText=`${f.current[`temp_${y}`]} °${y.toUpperCase()}`,o.innerText=`${f.current[`feelslike_${y}`]} °${y.toUpperCase()}`,a.innerText=`${f.current[`wind_${v}`]} ${v} from ${f.current.wind_dir}`,c.innerText=`${f.current.pressure_mb} hPa`,s.innerText=`${f.current.humidity} %`,l.innerText=`${f.current[`precip_${b}`]} ${b}`,u.innerText=`${f.current[`vis_${w}`]} ${w}`,p.innerText=`${f.current.uv}`),async function(n="sky"){const e=document.querySelector("img");try{const t=await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=7wKVqKRF01bWdUJTDZtEo3GE0E3tpNaN&s=${n}_weather`,{mode:"cors"}),r=await t.json();200!==t.status?console.log("Server gif error!",r):e.src=r.data.images.original.url}catch(n){console.log("Fetch gif error!",n)}}(f.current.condition.text)}catch(n){console.log("Fetch weather error!",n)}}h.src=m,x.href=E,B.addEventListener("click",(n=>{n.preventDefault(),S(document.querySelector("input").value),document.querySelector("input").value=null})),[C,g].forEach((n=>n.addEventListener("click",(()=>{"c"===y?(y="f",v="mph",b="in",w="miles",C.classList.remove("active"),g.classList.add("active")):(y="c",v="kph",b="mm",w="km",g.classList.remove("active"),C.classList.add("active")),S(document.querySelector("#city").innerText)})))),S()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,